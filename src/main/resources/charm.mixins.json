{
  "required": true,
  "minVersion": "0.8.2",
  "package": "svenhjol.charm.mixin",
  "compatibilityLevel": "JAVA_16",
  "injectors": {
    "defaultRequire": 1
  },
  "plugin": "svenhjol.charm.mixin.CharmMixinConfigPlugin",
  "mixins": [
    "accessor.AnvilMenuAccessor",
    "accessor.AxeItemAccessor",
    "accessor.BeeAccessor",
    "accessor.BiomeGenerationSettingsAccessor",
    "accessor.BlockEntityTypeAccessor",
    "accessor.BlockTagsAccessor",
    "accessor.BoatAccessor",
    "accessor.BundleItemAccessor",
    "accessor.FeaturesAccessor",
    "accessor.FireBlockAccessor",
    "accessor.GoalSelectorAccessor",
    "accessor.HoglinAiAccessor",
    "accessor.ItemAccessor",
    "accessor.ItemCombinerMenuAccessor",
    "accessor.ItemEntityAccessor",
    "accessor.ItemTagsAccessor",
    "accessor.MapItemSavedDataAccessor",
    "accessor.MinecraftServerAccessor",
    "accessor.MineshaftCorridorAccessor",
    "accessor.MineshaftPartAccessor",
    "accessor.MobAccessor",
    "accessor.MobSpawnSettingsAccessor",
    "accessor.PatrolSpawnerAccessor",
    "accessor.PlayerAccessor",
    "accessor.PlayerDataStorageAccessor",
    "accessor.PoiTypeAccessor",
    "accessor.PotionBrewingAccessor",
    "accessor.RecipeManagerAccessor",
    "accessor.ServerLevelAccessor",
    "accessor.ShulkerBoxBlockEntityAccessor",
    "accessor.SimpleParticleTypeAccessor",
    "accessor.SlotAccessor",
    "accessor.StructurePieceAccessor",
    "accessor.StructureTemplatePoolAccessor",
    "accessor.TreeConfigurationAccessor",
    "accessor.WeightedRandomListAccessor",
    "accessor.WoodTypeAccessor",
    "aerial_affinity_enchantment.AllowBlockBreakMixin",
    "anvil_improvements.AllowHigherEnchantmentLevelMixin",
    "anvil_improvements.AllowTakeWithoutXpMixin",
    "anvil_improvements.ReduceAnvilDamageMixin",
    "anvil_improvements.RemoveTooExpensiveMixin",
    "armor_invisibility.ReduceAttackDistanceMixin",
    "atlases.CheckContainsMapsMixin",
    "atlases.ScaleAtlasesOnCartographyTableMixin",
    "auto_restock.AddStatWhenAnimalConsumedMixin",
    "auto_restock.AddStatWhenCompostedMixin",
    "block_of_ender_pearls.PreventRandomTeleportMixin",
    "campfires_no_damage.BypassCampfireDamageMixin",
    "chickens_drop_feathers.DropFeatherMixin",
    "collection_enchantment.AddDroppedItemToInventoryMixin",
    "collection_enchantment.TryBreakBlockMixin",
    "event.AddEntityManagerMixin",
    "event.AddEntityServerMixin",
    "event.ApplyBeaconEffectsMixin",
    "event.CheckAnvilRepairMixin",
    "event.EntityDieMixin",
    "event.EntityDropItemsMixin",
    "event.EntityDropXpMixin",
    "event.EntityEquipMixin",
    "event.EntityHurtMixin",
    "event.EntityJumpMixin",
    "event.PlayerDieMixin",
    "event.PlayerDropInventoryMixin",
    "event.PlayerLoadDataMixin",
    "event.PlayerSaveDataMixin",
    "event.PlayerTickMixin",
    "event.StackItemOnItemMixin",
    "event.TakeAnvilOutputMixin",
    "event.ThrownEntityImpactMixin",
    "event.UpdateAnvilMixin",
    "extract_enchantments.AddCustomGrindstoneSlotsMixin",
    "extract_enchantments.UpdateGrindstoneOutputMixin",
    "feather_falling_crops.PreventTramplingMixin",
    "gentle_potion_particles.RenderTranslucentParticleMixin",
    "grindable_horse_armor.UpdateGrindstoneOutputMixin",
    "helper.AddSortingRecipeManagerMixin",
    "helper.ChangeAdvancementErrorTypeMixin",
    "helper.CheckEnchantingPowerMixin",
    "helper.CheckImmovableByPistonMixin",
    "helper.CheckItemDespawnMixin",
    "helper.FilterAdvancementsMixin",
    "helper.TranslateServerComponentMixin",
    "husk_improvements.AllowSpawningAnywhereMixin",
    "mineshaft_improvements.GenerateMineshaftPiecesMixin",
    "more_portal_frames.AddValidPortalFrameBlocksMixin",
    "open_double_doors.ReactOnDoorOpenedMixin",
    "parrots_stay_on_shoulder.KeepShoulderEntitiesMixin",
    "piglins_follow_gold_blocks.CheckHoldingGoldBlockMixin",
    "potion_of_hogsbane.PreventAttackingAiMixin",
    "potion_of_hogsbane.PreventAttackingHoglinMixin",
    "quadrants.RotateBlockBeforePlaceMixin",
    "remove_potion_glint.CheckPotionHasGlintMixin",
    "respawn_in_nether.ChangeRespawnDimension",
    "respawn_in_nether.FindSpaceForPlayer",
    "snow_storms.PlaceMoreSnowMixin",
    "snow_storms.PreventSnowMeltingMixin",
    "snow_storms.SetEntityFreezingMixin",
    "stackable_enchanted_books.FixAnvilBookStackMixin",
    "stackable_stews.FinishEatingMushroomStewMixin",
    "stackable_stews.FinishEatingSuspiciousStewMixin",
    "stray_improvements.AllowSpawningAnywhereMixin",
    "use_totem_from_inventory.CheckInventoryMixin",
    "variant_ladders.ClimbTrapdoorMixin",
    "wandering_trader_improvements.SpawnMoreFrequentlyMixin"
  ],
  "client": [
    "accessor.AbstractContainerScreenAccessor",
    "accessor.EntityRenderDispatcherAccessor",
    "accessor.LivingEntityRendererAccessor",
    "accessor.MinecraftAccessor",
    "accessor.RenderBuffersAccessor",
    "accessor.RenderLayerAccessor",
    "accessor.RenderStateShardAccessor",
    "accessor.RenderTypeAccessor",
    "accessor.ScreenAccessor",
    "accessor.SoundEngineAccessor",
    "accessor.SoundManagerAccessor",
    "anvil_improvements.AddRepairCostToTooltipMixin",
    "anvil_improvements.StopShowingTooExpensiveMixin",
    "armor_invisibility.PreventArmorRenderMixin",
    "atlases.DrawAtlasOnCartographyTableMixin",
    "colored_glints.GetArmorStackMixin",
    "colored_glints.GetCustomRenderLayersMixin",
    "colored_glints.GetElytraMixin",
    "colored_glints.GetItemMixin",
    "devenv.FixDevAuthSpamMixin",
    "event.AddEntityClientMixin",
    "event.ClientSpawnEntityMixin",
    "event.PlaySoundMixin",
    "event.RenderBlockItemMixin",
    "event.RenderGuiMixin",
    "event.RenderHeldItemMixin",
    "event.RenderTooltipMixin",
    "event.ScrollMouseMixin",
    "event.SetupGuiMixin",
    "event.StitchTextureMixin",
    "extract_enchantments.ShowGrindstoneCostMixin",
    "helper.FixRecipeSpamMixin",
    "helper.LoadCustomModelPartsMixin",
    "helper.ShowEnchantmentParticlesMixin",
    "music_improvements.TryCustomMusicMixin",
    "remove_spyglass_scope.RemoveSpyglassHudMixin",
    "snow_storms.RenderHeavySnowTextureMixin",
    "storage_labels.CallStorageLabelsRenderMixin",
    "storage_labels.GetChestBlockEntityContextMixin",
    "variant_chests.FetchCustomChestTextureMixin"
  ]
}

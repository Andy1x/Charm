buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "${mc_version}-${version}.${build_number}"
if (release_type != "") {
    version += "-${release_type}"
}

ext.configFile = file('gradle.properties')
ext.config = parseConfig(configFile)

group = "svenhjol.charm" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_name

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    coreMod = "svenhjol.charm.base.CharmLoadingPlugin"

    mappings = mc_mappings
    replace 'GRADLE:VERSION', version
    replace 'scala.actors.threadpool.Arrays', 'java.util.Arrays' // Vazkii did this so I am too
    replace '@MOD_VERSION@', project.version
    replaceIn 'Charm.java'

//    useDepAts = true
    makeObfSourceJar = false
}

jar {
    exclude "**/*.bat"
    exclude "**/*.psd"
    exclude "**/*.exe"
    exclude "**/unused"

    manifest {
        attributes("FMLCorePluginContainsFMLMod": "true", "FMLCorePlugin": "svenhjol.charm.base.CharmLoadingPlugin")
    }
}

repositories {
    maven { // for AutoRegLib and Quark
        name "blamejared"
        url "http://maven.blamejared.com/"
    }
    maven { // JEI & Tinkers
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven { // for HWYLA
        name 'Mobius'
        url "https://tehnut.info/maven"
    }
}

dependencies {
    compileOnly "vazkii.autoreglib:AutoRegLib:1.3-27.13"
    compileOnly "vazkii.quark:Quark:r1.5-146.8"
    runtime "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
    runtime "mezz.jei:jei_1.12.2:4.14.3.242"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': mc_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info', '**/psd/**'
    }
}

task deObfJar(type: Jar) {
    from(sourceSets.main.output)
    archiveName = "${baseName}-${version}-deobf.${extension}"
}

/**
 * Increments the buildnumber in your config file, and saves it
 */
task incrementBuildNumber {
    doFirst {
        config.build_number = (build_number.toString().toInteger()) + 1
        configFile.withWriter {
            config.toProperties().store(it, "")
        }
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

defaultTasks 'clean', 'build', 'incrementBuildNumber'